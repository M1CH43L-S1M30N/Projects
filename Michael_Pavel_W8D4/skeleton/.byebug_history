q
option
options
q
option
option.model_class
foreign_key
option.primary_key
q
self.class.where(option.primary_key => foreign_key).first
q
y
q
send("#{option.foreign_key}")
option.send("#{option.foreign_key}")
options
option
q
exit
option.foreign_key
exit
foreign_key
foregn_key
name
disp option
disp options
q
param
cat.name
Cat.name
self
sel
q
exit
where_line
vals
q
where_line
vals
q
vals.class
vals.classs
vals
q
exit
where_line
vals
q
vals
new_cols
q
col_names.join(", ")
col_names.join
col_names
q
vals
col_names
q
exit
cols
cols = *col_names
cols = col_names
*col_names
col_names
q
col_names
q
exit
q_marks
col_names
q
y
q
exit
finds
q
finds
q
exit
finds
q
finds
q
exit
finds
q
exit
finds
exit
:name
params[attr_name]
attr_sym
exit
@attributes
exit
n
@attributes
exit
@attributes
exit
disp self.attributes
disp val
disp col
exit
@attributes
exit
@attributes
self.attributes
self.attribbutes
q
@attributes
